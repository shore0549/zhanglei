package com.wechat.bills.config;

import java.sql.SQLException;

import javax.sql.DataSource;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import com.alibaba.druid.pool.DruidDataSource;
import com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceBuilder;
import com.wechat.bills.controller.WeChatBillsController;

@Configuration
public class DatabaseAutoConfig {
	 private Logger logger = LoggerFactory.getLogger(DatabaseAutoConfig.class);
	
	@Bean
	public DataSource dataSource() {
//		DruidDataSource datasource = new DruidDataSource();
//    	datasource.setUrl(this.dbUrl);
//    	datasource.setUsername(username);
//    	datasource.setPassword(password);
//    	datasource.setDriverClassName(driverClassName);
    	
		DruidDataSource datasource = DruidDataSourceBuilder.create().build();
    	//configuration
    	datasource.setInitialSize(1);
    	datasource.setMinIdle(1);
    	datasource.setMaxActive(20);
    	datasource.setMaxWait(60000);
    	datasource.setTimeBetweenEvictionRunsMillis(60000);
    	datasource.setMinEvictableIdleTimeMillis(300000);
    	datasource.setValidationQuery("select 1 from dual");
    	datasource.setTestWhileIdle(true);
    	datasource.setTestOnBorrow(false);
    	datasource.setTestOnReturn(false);
    	datasource.setPoolPreparedStatements(true);
    	datasource.setMaxPoolPreparedStatementPerConnectionSize(20);
    	try {
			datasource.setFilters("wall,log4j");
		} catch (SQLException e) {
			logger.error("druid configuration initialization filter", e);
		}
    	datasource.setConnectionProperties("druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000");
    	
    	return datasource;
	}
}
